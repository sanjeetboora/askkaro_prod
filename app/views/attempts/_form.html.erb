<h2 class="survey-title">
  <p style="white-space: pre-wrap"><%= raw(@attempt.survey.description) %></p>
</h2>

<div class="alert alert-info" id="note">
  <strong>Please dont click anywhere else aprt from the browser window and current tab else your test will be submitted."</strong>
</div>
<div class="alert alert-info" id="timer">
  <strong style="font-size: 25px;">Time Left:</strong>

  <strong><p id="demo"></p></strong>
</div>


<script>
    var now = new Date().getTime();
    var hours = parseInt("<%= @survey.period.to_s[11,13][0,2].to_i %>");
    var minutes = parseInt("<%= @survey.period.strftime("%M")%>");
    console.log(hours);
    var b=(hours*3600000)+(minutes*60000);
    var countDownDate = new Date().getTime()+b;
    var x = setInterval(function() {
        var now = new Date().getTime();
        var distance = countDownDate - now;
        var ho = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var mi = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);
        document.getElementById("demo").innerHTML = ho + " hr "
            + mi + " min "+seconds+" sec ";
        if(distance <  60000){
            document.getElementById("timer").classList.remove('alert-info');
            document.getElementById("timer").classList.add('alert-danger');
            console.log("script running");
        }
        if (distance < 0) {
            clearInterval(x);
            document.getElementById("demo").innerHTML = "EXPIRED";
            document.getElementById('submit_atempt').click();
        }
    }, 1000);
</script>

<%= form_for(@attempt, url: attempt_scope(@attempt)) do |f| %>
    <%= hidden_field_tag :survey_id, @survey.id %>
    <%= hidden_field_tag :enrollment, params["enrollment"] %>
    <ol class="questions">
      <%= f.fields_for :answers, get_answer_fields(@attempt).sample(@attempt.survey.randomcount) do |answer_fields| %>
          <li>
            <% question = answer_fields.object.question %>
            <p class="question" style="font-size: 15px;"><strong><%= question.text %></strong></p>
            <ul class="question">

              <%= collection_radio_buttons('survey_attempt[answers_attributes]', question.id, question.options, :id, :text,item_wrapper_tag: false) do |b| %>
                  <li class="radio">
                    <%= b.label { b.radio_button + b.text } %>
                  </li>
              <% end %>
            </ul>
          </li>
      <% end -%>
    </ol>
    <%= f.submit "Submit", class: 'btn btn-default', id: 'submit_atempt' %>
<% end -%>
<script>
    window.location.hash="no-back-button";
    window.location.hash="Again-No-back-button";//again because google chrome don't insert first hash into history
    window.onhashchange=function(){window.location.hash="no-back-button";}
</script>

    <script type="text/javascript" charset="utf-8">
    // "librairie" de gestion de la visibilité
    //  var visible = vis(); // donne l'état courant
    //  vis(function(){});   // définit un handler pour les changements de visibilité
//    var vis = (function(){
//        var stateKey, eventKey, keys = {
//            hidden: "visibilitychange",
//            webkitHidden: "webkitvisibilitychange",
//            mozHidden: "mozvisibilitychange",
//            msHidden: "msvisibilitychange"
//        };
//        for (stateKey in keys) {
//            if (stateKey in document) {
//                eventKey = keys[stateKey];
//                break;
//            }
//        }
//        return function(c) {
//            if (c) {
//                document.addEventListener(eventKey, c);
//                //document.addEventListener("blur", c);
//                //document.addEventListener("focus", c);
//            }
//            return !document[stateKey];
//        }
//    })();
//
//    vis(function(){
//        document.title = vis() ? 'Visible' : 'Not visible';
//        alert("You are trying to exit the text window your test will be submitted and you will exit!")
//        document.getElementById('submit_atempt').click();
////        console.log(new Date, 'visible ?', vis());
//    });
//
//    // to set the initial state
//    alert("You are trying to exit the text window your test will be submitted and you will exit!")
</script>
<script type="text/javascript" charset="utf-8">
//    var hidden, visibilityChange;
//    if (typeof document.hidden !== "undefined") {
//        hidden = "hidden";
//        visibilityChange = "visibilitychange";
//    }
//    else if (typeof document.mozHidden !== "undefined") {
//        hidden = "mozHidden";
//        visibilityChange = "mozvisibilitychange";
//    }
//    else if (typeof document.msHidden !== "undefined") {
//        hidden = "msHidden";
//        visibilityChange = "msvisibilitychange";
//    }
//    else if (typeof document.webkitHidden !== "undefined") {
//        hidden = "webkitHidden";
//        visibilityChange = "webkitvisibilitychange";
//    }
//
//    function handleVisibilityChange() {
//        if (document[hidden]) {
//            //Not visible, Do whatever
//            alert("You are trying to exit the text window your test will be submitted and you will exit!")
//            document.getElementById('submit_atempt').click();
//
//        }
//        else {
//            //Visible
//        }
//    }
//
//    if (typeof document.addEventListener === "undefined" ||
//        typeof document[hidden] === "undefined") {
//        alert("This demo requires a browser, such as Google Chrome or Firefox, that supports the Page Visibility API.");
//    }
//    else
//        document.addEventListener(visibilityChange, handleVisibilityChange, false);
</script>
<script type="text/javascript" charset="utf-8">
var v=1;
    //    function toggleFullScreen() {
    document.fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.documentElement.webkitRequestFullScreen;
    function requestFullscreen(element) {
        if (element.requestFullscreen) {
            element.requestFullscreen();
        } else if (element.mozRequestFullScreen) {
            element.mozRequestFullScreen();
        } else if (element.webkitRequestFullScreen) {
            element.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
        }
    }
    if (document.fullscreenEnabled) {
        requestFullscreen(document.documentElement);
    }
    //    }
if(v==1) {
    document.addEventListener("click", function (e) {
        if (document.fullscreenEnabled && v==1) {
            requestFullscreen(document.documentElement);
        }
        v++;
    }, false);
}
</script>
<script type="text/javascript" charset="utf-8">
    function my_onkeydown_handler() {
        switch (event.keyCode) {
            case 116 : // 'F5'
                event.preventDefault();
                event.keyCode = 0;
                window.status = "F5 disabled";
                break;
        }
    }
    document.addEventListener("keydown", my_onkeydown_handler);
</script>
<script type="text/javascript" charset="utf-8">
    var isActive;
    window.onfocus = function () {
        isActive = true;
    };
    window.onblur = function () {
        isActive = false;
    };
    // test
    var v=0;
    var i=setInterval(function () {
        //console.log(window.isActive ? 'active' : 'inactive');
        if(window.isActive==false && v==2){
            alert("You are trying to exit the text window your test will be submitted and you will exit!")
            document.getElementById('submit_atempt').click();
            clearInterval(i);
        } else if(window.isActive==false ){
            v++;
            document.getElementById("note").classList.remove('alert-info');
            document.getElementById("note").classList.add('alert-danger');
        }
    }, 100);
</script>